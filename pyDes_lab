from pyDes import *
#data = "Please encrypt my data"
#k = des("DESCRYPT", CBC, "\0\0\0\0\0\0\0\0", pad=None, padmode=PAD_PKCS5)
# For Python3, you'll need to use bytes, i.e.:


def trans(s):
    return "b'%s'" % ''.join('\\x%.2x' % x for x in s)

def encrypt(a):
    data = input("需要加密的信息:")
    data = bytes(data, encoding="utf-8")
    if a == '0':
        key = input("输入8位秘钥:")
        key = bytes(key, encoding="utf-8")
        k = des(key, CBC, b"\1\0\1\1\0\0\1\0", pad=None, padmode=PAD_PKCS5)
        d = k.encrypt(data)
        print("加密后的信息: %r" % d)
    elif a == '1':
        key = input("输入16位或者24位位秘钥:")
        key = bytes(key, encoding="utf-8")
        k = triple_des(key, CBC, b"\1\0\1\1\0\0\1\0", pad=None, padmode=PAD_PKCS5)
        d = k.encrypt(data)
        print("加密后的信息: %r" % d)
    else:
        print("输入错了！")

def decrypt(b):
    txt = input("请输入需要解密的文本:")
    txt = bytes(txt, encoding="utf-8")
    if b == '0':
        key = input("请输入8位秘钥:")
        key = bytes(key, encoding="utf-8")
        k = des(key, CBC, b"\1\0\1\1\0\0\1\0", pad=None, padmode=PAD_PKCS5)
        d = k.decrypt(txt)
        print("解密后的信息: %r" % d)
    elif b == '1':
        key = input("请输入16或24位位秘钥:")
        key = bytes(key, encoding="utf-8")
        k = des(key, CBC, b"\1\0\1\1\0\0\1\0", pad=None, padmode=PAD_PKCS5)
        d = k.decrypt(txt)
        print("解密后的信息: %r" % d)
    else:
        print("输入错了！")

if __name__  == '__main__':
    optionType = input ("加密请输入0，解密请输入1:")
    if optionType == '0':
        CryptType = input("DES加密请输入0，3DES加密请输入1:")
        if CryptType == '0':
            encrypt(CryptType)
        elif CryptType == '1':
            encrypt(CryptType)
        else:
            print("输入错了！")
    elif optionType == '1':
        deCryptType = input("DES解密请输入0，3DES解密请输入1:")
        if deCryptType == '0':
            decrypt(deCryptType)
        elif deCryptType == '1':
            decrypt(deCryptType)
        else:
            print("输入错了！")
    else:
        print("输入错了！")
